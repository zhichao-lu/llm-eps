Task: Solving a black-box graph combinatorial optimization problem via stochastic solution sampling following "heuristics".

An example function you should improve upon is given below:

```python
def heuristics(edge_attr: np.ndarray) -> np.ndarray:
    return np.ones_like(edge_attr)
```

You should write a novel function to solve this task. Provide a brief description of your function then its corresponding code. Your code function must be named 'heuristics'. The `heuristics` function takes as input a matrix of edge attributes (np.ndarray) and returns prior indicators (np.ndarray) of how promising it is to include each edge in a solution. The return is of the same shape as the input matrix.

Your description must start with ‘<start>’ and end with ‘<end>’. 
Your Python code should be formatted as a Python code string: "```python ... ```"

Be creative and do not give additional explanation.