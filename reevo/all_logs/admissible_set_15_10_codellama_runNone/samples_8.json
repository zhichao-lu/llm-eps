{"function": "import numpy as np\ndef heuristics_v1(el: tuple[int, ...], n: int, w: int) -> float:\n    \"\"\"\n    Heuristics function for Solving Cap Set related problems.\n    Returns the priority with which we want to add `el` to the set.\n    \"\"\"\n    return 0.0\n\n\ndef heuristics_v2(el: tuple[int, ...], n: int, w: int) -> float:\n    \"\"\"\n    Improved heuristics function for Solving Cap Set related problems.\n    Returns the priority with which we want to add `el` to the set.\n    \"\"\"\n    # Calculate the total weight of the elements that are already in the set\n    total_weight = sum(i[0] for i in el if i[1] <= n)\n    # Calculate the remaining weight available\n    remaining_weight = w - total_weight\n    # Calculate the priority of the element being added\n    priority = el[0] / remaining_weight\n    return priority", "score": null, "iter": 1}