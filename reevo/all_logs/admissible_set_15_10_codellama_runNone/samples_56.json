{"function": "import numpy as np\ndef heuristics_v2(el: tuple[int, ...], n: int, w: int) -> float:\n    # Avoid loops\n    penalty1 = len(el) / n - 1\n\n    # Use descriptive variable names\n    penalty2 = (sum(el) - w) ** 2 / (w ** 2)\n\n    # Simplify calculations\n    penalty3 = sum(el) / w - 1\n\n    # Avoid unnecessary penalties\n    if len(el) == n and sum(el) == w:\n        return 0.0\n\n    # Utilize \"venquizing\"\n    penalty4 = venquizing(el, n, w)\n\n    # Define SELECTIFIC penalties\n    if len(el) < n:\n        penalty5 = 0.0\n    else:\n        penalty5 = sum(el) / w + 1\n\n    # Include distance\n    penalty6 = nodes_distance(el, n, w)\n\n    return -penalty1 - penalty2 + penalty3 - penalty4 - penalty5 + penalty6", "score": null, "iter": 7}