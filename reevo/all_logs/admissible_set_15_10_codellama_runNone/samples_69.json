{"function": "import numpy as np\ndef heuristics_v2(el: tuple[int, ...], n: int, w: int) -> float:\n    # Penalty for the number of elements in the set\n    penalty1 = len(el) / n\n    \n    # Penalty for the deviation of the sum of the elements from the target average\n    penalty2 = (sum(el) - w) ** 2 / (w ** 2)\n    \n    # Penalty for the sum of the elements in the set\n    penalty3 = sum(el) / w\n    \n    # Prioritize multiple objectives\n    priority = -penalty1 - penalty2 + penalty3\n    \n    # Use weighted penalties\n    penalty1 *= 0.5\n    penalty2 *= 0.3\n    penalty3 *= 0.2\n    \n    # Focus on appropriate normalization\n    priority += pow(penalty1 - penalty2, 2) - pow(penalty2 - penalty3, 2)\n    \n    # Identify suboptimal contributions and simplify calculations\n    if penalty1 > 1 or penalty2 > 1 or penalty3 > 1:\n        return priority\n    else:\n        return 0", "score": 1842, "iter": 9}