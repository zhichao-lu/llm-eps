{"function": "import numpy as np\ndef heuristics_v2(el: tuple[int, ...], n: int, w: int) -> float:\n    # Penalty for the number of elements in the set\n    penalty1 = len(el) / n\n    \n    # Penalty for the deviation of the sum of the elements from the target average\n    penalty2 = (sum(el) - w) ** 2 / (w ** 2)\n    \n    # Penalty for the sum of the elements in the set\n    penalty3 = sum(el) / w\n    \n    # Weighted average of the penalties\n    weighted_sum = penalty1 * 0.3 + penalty2 * 0.4 + penalty3 * 0.3\n    \n    # Normalize the weighted sum\n    normalized_weighted_sum = weighted_sum / sum(w)\n    \n    # Suboptimal contributions are penalized\n    if normalized_weighted_sum > 1.0:\n        normalized_weighted_sum = 1.0\n    elif normalized_weighted_sum < 0.0:\n        normalized_weighted_sum = 0.0\n    \n    return -normalized_weighted_sum", "score": null, "iter": 9}