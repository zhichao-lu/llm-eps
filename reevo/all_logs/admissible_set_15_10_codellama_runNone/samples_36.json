{"function": "import numpy as np\ndef heuristics_v2(el: tuple[int, ...], n: int, w: int) -> float:\n    # Use a heap to keep track of the elements and their priorities\n    heap = []\n    for e in el:\n        priority = 0.0\n        if e <= w:\n            priority = (w - e) / w\n        else:\n            priority = (e - w) / w\n        heapq.heappush(heap, (priority, e))\n\n    # Greedily select the best element to add to the set\n    selected_elements = set()\n    while heap:\n        priority, element = heapq.heappop(heap)\n        if element not in selected_elements:\n            selected_elements.add(element)\n            if len(selected_elements) == n:\n                break\n    else:\n        priority = 0.0\n\n    return -priority", "score": null, "iter": 4}