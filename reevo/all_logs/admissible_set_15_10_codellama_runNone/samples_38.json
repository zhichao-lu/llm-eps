{"function": "import numpy as np\ndef heuristics_v2(el: tuple[int, ...], n: int, w: int) -> float:\n    # Create a heap to store the elements\n    heap = []\n    \n    # Insert the elements into the heap\n    for e in el:\n        heapq.heappush(heap, (e, e))\n    \n    # Sort the heap in non-decreasing order based on the first element of each tuple\n    heap.sort(key=lambda x: x[0])\n    \n    # Initialize the priority with the sum of the elements in the set\n    priority = 0\n    \n    # Iterate over the heap and select the best element to add to the set\n    for e, _ in heap:\n        priority += e\n        if len(heap) > n:\n            heapq.heappop(heap)\n    \n    # Return the priority with which we want to add the element to the set\n    return -priority / w", "score": null, "iter": 5}