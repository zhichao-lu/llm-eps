{"function": "import numpy as np\ndef heuristics_v2(el: tuple[int, ...], n: int, w: int) -> float:\n    # Penalty for the number of elements in the set\n    penalty = len(el) / n\n    \n    # Penalty for the sum of the elements in the set\n    penalty += sum(el) / w\n    \n    # Penalty for the distance of the element\n    dist = sum(abs(el[i] - xi) for i, xi in enumerate(el))\n    \n    penalty += dist / (n * w)\n    \n    # Additional penalty for the distance of the element from the centroid of the current set\n    centroid = sum(el) / len(el)\n    dist_centroid = sum(abs(x - centroid) for x in el)\n    penalty += dist_centroid / (n * w)\n    \n    return -penalty", "score": 1452, "iter": 4}